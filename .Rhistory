estim.r <-
NMF::nmfEstimateRank(
mat,
range,
method = method,
nrun = nrun,
verbose = verbose,
seed = seed)
estim.r <-
NMF::nmfEstimateRank(
mat,
range,
method = method,
nrun = nrun,
verbose = T,
seed = seed)
library(NMF)
estim.r <-
NMF::nmfEstimateRank(
mat,
range,
method = method,
nrun = nrun,
verbose = T,
seed = seed)
devtools::load_all(".")
#- Signature best rank estimation
sig_estimate(laml.tnm$nmf_matrix)
#- Signature best rank estimation
sig_estimate(laml.tnm$nmf_matrix, pConstant = 0.01)
maftools::extractSignatures(laml.tnm$nmf_matrix)
maftools::extractSignatures(laml.tnm$nmf_matrix)
maftools::extractSignatures(laml.tnm)
#- Signature best rank estimation
sig_estimate(laml.tnm$nmf_matrix, pConstant = 0.01, nrun = 3)
laml@data
laml.tnm2 = maftools::trinucleotideMatrix(maf = laml, ref_genome = 'BSgenome.Hsapiens.UCSC.hg19',
prefix = 'chr', add = TRUE, useSyn = TRUE)
#-------------- NMF prepare for MAF ------------#
laml.tnm <- prepare_maf(maf = laml, ref_genome = 'BSgenome.Hsapiens.UCSC.hg19',
prefix = 'chr', add = TRUE, useSyn = TRUE)
identical(laml.tnm2, laml.tnm)
#------------- Test Maftools ----------------
require(maftools)
laml.maf = system.file('extdata', 'tcga_laml.maf.gz', package = 'maftools') #path to TCGA LAML MAF file
laml.clin = system.file('extdata', 'tcga_laml_annot.tsv', package = 'maftools') # clinical information containing survival information and histology. This is optional
laml = read.maf(maf = laml.maf, clinicalData = laml.clin)
library(BSgenome.Hsapiens.UCSC.hg19, quietly = TRUE)
laml.tnm = trinucleotideMatrix(maf = laml, prefix = 'chr', add = TRUE, ref_genome = "BSgenome.Hsapiens.UCSC.hg19")
library('NMF')
laml.sign = extractSignatures(mat = laml.tnm, nTry = 6, plotBestFitRes = FALSE)
laml.sign = extractSignatures(mat = laml.tnm, nTry = 6, plotBestFitRes = FALSE, pConstant = 0.01)
#------------- Test Maftools ----------------
require(maftools)
laml.maf = system.file('extdata', 'tcga_laml.maf.gz', package = 'maftools') #path to TCGA LAML MAF file
laml.clin = system.file('extdata', 'tcga_laml_annot.tsv', package = 'maftools') # clinical information containing survival information and histology. This is optional
laml = read.maf(maf = laml.maf, clinicalData = laml.clin)
library(BSgenome.Hsapiens.UCSC.hg19, quietly = TRUE)
laml.tnm = trinucleotideMatrix(maf = laml, prefix = 'chr', add = TRUE, ref_genome = "BSgenome.Hsapiens.UCSC.hg19")
library('NMF')
laml.sign = extractSignatures(mat = laml.tnm, nTry = 6, plotBestFitRes = FALSE)
laml.sign = extractSignatures(mat = laml.tnm, nTry = 6, plotBestFitRes = FALSE, pConstant = 0.01)
devtools::session_info()
#-------------- NMF prepare for Copy Number ------------#
example_data = system.file("extdata", "example_cn_list.RData", package = "sigminer")
load(example_data)
devtools::load_all(".")
#-------------- NMF prepare for Copy Number ------------#
example_data = system.file("extdata", "example_cn_list.RData", package = "sigminer")
load(example_data)
tcga_segTabs2 = lapply(tcga_segTabs, data.table::as.data.table)
#---- get series
features = get_features(tcga_segTabs)
#---- get series
features = get_features(tcga_segTabs)
#---- get series
features = get_features(tcga_segTabs2)
debug(get_features)
#---- get series
features = get_features(tcga_segTabs2)
getBPnum(CN_data, chrlen)
debug(getBPnum)
chrlen
devtools::load_all(".")
tcga_segTabs2 = lapply(tcga_segTabs,
function(x) {
data.table::as.data.table(x)
x$chromosome = paste0("chr", x$chromosome),
x})
x$chromosome = paste0("chr", x$chromosome)
tcga_segTabs2 = lapply(tcga_segTabs,
function(x) {
data.table::as.data.table(x)
x$chromosome = paste0("chr", x$chromosome)
x})
#---- get series
features = get_features(tcga_segTabs2)
tcga_segTabs2 = lapply(tcga_segTabs,
function(x) {
data.table::as.data.table(x)
x$chromosome = paste0("chr", x$chromosome)
data.table::as.data.table(x)})
#---- get series
features = get_features(tcga_segTabs2)
debug(get_features)
#---- get series
features = get_features(tcga_segTabs2)
debug(getBPnum)
class(segTab)
chrlen
chrlen[chrlen[, 1] == c, 2]
devtools::load_all(".")
#---- get series
features = get_features(tcga_segTabs2)
#---- get series
features = get_features(tcga_segTabs2)
debug(get_features)
#---- get series
features = get_features(tcga_segTabs2)
getBPnum(CN_data, chrlen)
debug(getBPnum)
print("Processing samps ", samps)
#########################################
getBPnum2 <- function(abs_profiles, chrlen)
{
out <- c()
samps <- names(abs_profiles)
for (i in samps)
{
print("Processing samps ", samps)
segTab <- abs_profiles[[i]]
chrs <- unique(segTab$chromosome)
allBPnum <- c()
for (c in chrs)
{
currseg <- segTab[chromosome == c,]
print("Processing chrs ", c)
intervals <-
seq(1, chrlen[chrlen[, 1] == c, 2] + 10000000, 10000000)
res <-
hist(currseg$end[-nrow(currseg)],
breaks = intervals,
plot = FALSE)$counts
allBPnum <- c(allBPnum, res)
}
out <-
rbind(out, cbind(ID = rep(i, length(allBPnum)), value = allBPnum))
}
rownames(out) <- NULL
data.frame(out, stringsAsFactors = F)
}
getBPnum2(tcga_segTabs2, chrlen = sigminer::chromsize.hg19)
#########################################
getBPnum2 <- function(abs_profiles, chrlen)
{
out <- c()
samps <- names(abs_profiles)
for (i in samps)
{
message("Processing samps ", samps)
segTab <- abs_profiles[[i]]
chrs <- unique(segTab$chromosome)
allBPnum <- c()
for (c in chrs)
{
currseg <- segTab[chromosome == c,]
message("Processing chrs ", c)
intervals <-
seq(1, chrlen[chrlen[, 1] == c, 2] + 10000000, 10000000)
res <-
hist(currseg$end[-nrow(currseg)],
breaks = intervals,
plot = FALSE)$counts
allBPnum <- c(allBPnum, res)
}
out <-
rbind(out, cbind(ID = rep(i, length(allBPnum)), value = allBPnum))
}
rownames(out) <- NULL
data.frame(out, stringsAsFactors = F)
}
getBPnum2(tcga_segTabs2, chrlen = sigminer::chromsize.hg19)
#########################################
getBPnum2 <- function(abs_profiles, chrlen)
{
out <- c()
samps <- names(abs_profiles)
for (i in samps)
{
message("Processing samps ", i)
segTab <- abs_profiles[[i]]
chrs <- unique(segTab$chromosome)
allBPnum <- c()
for (c in chrs)
{
currseg <- segTab[chromosome == c,]
message("Processing chrs ", c)
intervals <-
seq(1, chrlen[chrlen[, 1] == c, 2] + 10000000, 10000000)
res <-
hist(currseg$end[-nrow(currseg)],
breaks = intervals,
plot = FALSE)$counts
allBPnum <- c(allBPnum, res)
}
out <-
rbind(out, cbind(ID = rep(i, length(allBPnum)), value = allBPnum))
}
rownames(out) <- NULL
data.frame(out, stringsAsFactors = F)
}
getBPnum2(tcga_segTabs2, chrlen = sigminer::chromsize.hg19)
tt = tcga_segTabs2[["TCGA-06-0190-01A-01D-0236-01"]]
View(tt)
tcga_segTabs2 = lapply(tcga_segTabs,
function(x) {
data.table::as.data.table(x)
x$chromosome = paste0("chr", x$chromosome)
x = subset(x, chromosome %in% paste0("chr", 1:22))
data.table::as.data.table(x)})
#---- get series
features = get_features(tcga_segTabs2)
devtools::load_all(".")
#---- get series
features = get_features(tcga_segTabs2)
components = get_components(features)
inp_matrix = get_matrix(features, components)
sig_estimate(inp_matrix)
sig_estimate(inp_matrix, verbose = TRUE)
usethis::use_appveyor()
usethis::use_travis()
?sig_extract
devtools::load_all(".")
?sig_extract
devtools::load_all(".")
?sig_extract
devtools::load_all(".")
#-------------- NMF prepare for Copy Number ------------#
example_data = system.file("extdata", "example_cn_list.RData", package = "sigminer")
load(example_data)
tcga_segTabs2 = lapply(tcga_segTabs,
function(x) {
data.table::as.data.table(x)
x$chromosome = paste0("chr", x$chromosome)
x = subset(x, chromosome %in% paste0("chr", 1:22))
data.table::as.data.table(x)})
#---- get series
features = get_features(tcga_segTabs2)
components = get_components(features)
inp_matrix = get_matrix(features, components)
devtools::load_all(".")
components2 = get_components(features)
inp_matrix2 = get_matrix(features, components2)
identical(inp_matrix, inp_matrix2)
?sig_extract
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
devtools::load_all(".")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
devtools::load_all(".")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
devtools::load_all(".")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
devtools::load_all(".")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
devtools::load_all(".")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
library(NMF)
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber")
#- Extract signature based on specified rank
sig_extract(inp_matrix, 4, mode = "copynumber") -> res
devtools::load_all(".")
#- Extract signature based on specified rank
library(NMF)
res = sig_extract(inp_matrix, 4, mode = "copynumber")
res$nmfObj
res$signatures
res$contributions
res2 = sig_extract(inp_matrix, 4, mode = "mutation")
res2$signatures
res2$contributions
.libPaths()
library(hexSticker)
install.packages("hexSticker")
library(hexSticker)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 24,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/barchart.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/array.pic"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 24,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/barchart.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/array.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 24,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 4,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 4,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 3.5,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1.5,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .6,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .8,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "#f9690e",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .8,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "#C9B128",                  # color of border
h_fill = "blue",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 6,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .8,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
#h_color = "#C9B128",                  # color of border
#h_fill = "blue",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 8,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .8,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
#h_color = "#C9B128",                  # color of border
#h_fill = "blue",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
sticker(
package = "sigminer",                     # package name to display on sticker
p_size = 8,                          # size of package name
p_y = 1.5,                            # y of package name
#p_color = "#C9B128",                  # color of package name
subplot = "inst/figures/array2.png",          # sticker feature
s_x = 1,                          # x of feature
s_y = .8,                           # y of feature
s_width = .8,                        # width of feature - maintains aspect ratio
h_size = 2,                           # border
h_color = "gray",                  # color of border
#h_fill = "blue",                     # color of background
url = "github.com/ShixiangWang/sigminer",   # url at the bottom
u_color = "white",                    # color of url at the bottom
u_size = 1,                         # size of url at the bottom
filename = "inst/figures/sigminer.png"                 # location to save the image
)
